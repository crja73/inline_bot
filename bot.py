from aiogram import Bot, types
from aiogram.utils import executor
from aiogram.utils.markdown import text
from aiogram.dispatcher import Dispatcher
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher import filters, FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.dispatcher import FSMContext
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from config import TOKEN
import keyboards as kb



bot = Bot(token=TOKEN)
dp = Dispatcher(bot, storage=MemoryStorage())



class Form(StatesGroup):
    admin = State()
    

@dp.callback_query_handler(text_startswith='btn')
async def process_callback_kb1btn1(callback_query: types.CallbackQuery):
    code = callback_query.data[-1]
    print(code)

    if code.isdigit():
        code = int(code)
    if code == 0:
        await bot.send_message(callback_query.from_user.id, "–î–∞–π—Ç–µ —Ç–æ—á–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∞—à–µ–º—É –∑–∞–∫–∞–∑—É, —É–∫–∞–∂–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–µ–∫—Ç–∞ –∏ —Å—Ä–æ–∫, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π —Ç–µ–≥ telegram —á–µ—Ä–µ–∑ '@', –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º", reply_markup=kb.greet_kb1)
    if code == 4:
        await bot.send_message(callback_query.from_user.id, "–°–≤—è–∑–∞—Ç—å—Å—è –Ω–∞–ø—Ä—è–º—É—é -> @rolex0nmywrist")
        
    if code == 3:
        await bot.send_message(callback_query.from_user.id, "https://lolz.guru/threads/3933835/")


        

    # if code == 2:
    #     await bot.answer_callback_query(callback_query.id, text='–ù–∞–∂–∞—Ç–∞ –≤—Ç–æ—Ä–∞—è –∫–Ω–æ–ø–∫–∞')
    # elif code == 5:
    #     await bot.answer_callback_query(
    #         callback_query.id,
    #         text='–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ —Å –Ω–æ–º–µ—Ä–æ–º 5.\n–ê —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–ª–∏–Ω–æ–π –¥–æ 200 —Å–∏–º–≤–æ–ª–æ–≤ üòâ',
    #         show_alert=True)
    # else:
    #     await bot.answer_callback_query(callback_query.id)
    # await bot.send_message(callback_query.from_user.id, code)


##


@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message):
    await bot.send_message(message.from_user.id, "–ú–µ–Ω—é", reply_markup=kb.inline_kb_full)

@dp.message_handler(commands=['menu'])
async def process_start_command(message: types.Message):
    await bot.send_message(message.from_user.id, "–ú–µ–Ω—é", reply_markup=kb.inline_kb_full)



@dp.message_handler(Text(equals="–û–±—Ä–∞—Ç–Ω–æ –≤ –º–µ–Ω—é"))

async def menu(message: types.Message):
    print('yep')
    await message.answer("–ú–µ–Ω—é", reply_markup=kb.inline_kb_full)


@dp.message_handler(Text(contains="@"))
async def order(message: types.Message):
    await message.answer('–í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç. –û–∂–∏–¥–∞–π—Ç–µ, –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è —Å –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è')


@dp.message_handler(commands=['admin'])
async def adminka(message: types.Message):

    

    await message.answer('–û–±–µ–∑—å—è–Ω–∞')

    await Form.admin.set()


@dp.message_handler(state=Form.admin)
async def process_name(message: types.Message, state: FSMContext):
    
    
    async with state.proxy() as data:
        password = message.text
    if password == 'admin':
        await Form.next()
        await message.answer('–ß—É–≤–∞—à–∏—è')


# @dp.callback_query_handler(text="back_menu")
# async def call_main_menu(call: CallbackQuery):
#     await bot.delete_message(chat_id=call.from_user.id, message_id=call.message.message_id)


# @dp.message_handler(commands=['hi6'])
# async def process_hi6_command(message: types.Message):
#     await message.reply("–®–µ—Å—Ç–æ–µ - –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç –∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é\n"
#                         "–≠—Ç–∏ –¥–≤–µ –∫–Ω–æ–ø–∫–∏ –Ω–µ –∑–∞–≤–∏—Å—è—Ç –¥—Ä—É–≥ –æ—Ç –¥—Ä—É–≥–∞",
#                         reply_markup=kb.markup_request)






if __name__ == '__main__':
    executor.start_polling(dp)